/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 6);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

eval("// Default inflections\nmodule.exports = function (inflect) {\n\n  inflect.plural(/$/, 's');\n  inflect.plural(/s$/i, 's');\n  inflect.plural(/(ax|test)is$/i, '$1es');\n  inflect.plural(/(octop|vir)us$/i, '$1i');\n  inflect.plural(/(octop|vir)i$/i, '$1i');\n  inflect.plural(/(alias|status)$/i, '$1es');\n  inflect.plural(/(bu)s$/i, '$1ses');\n  inflect.plural(/(buffal|tomat)o$/i, '$1oes');\n  inflect.plural(/([ti])um$/i, '$1a');\n  inflect.plural(/([ti])a$/i, '$1a');\n  inflect.plural(/sis$/i, 'ses');\n  inflect.plural(/(?:([^fa])fe|(?:(oa)f)|([lr])f)$/i, '$1ves');\n  inflect.plural(/(hive)$/i, '$1s');\n  inflect.plural(/([^aeiouy]|qu)y$/i, '$1ies');\n  inflect.plural(/(x|ch|ss|sh)$/i, '$1es');\n  inflect.plural(/(matr|vert|ind)(?:ix|ex)$/i, '$1ices');\n  inflect.plural(/([m|l])ouse$/i, '$1ice');\n  inflect.plural(/([m|l])ice$/i, '$1ice');\n  inflect.plural(/^(ox)$/i, '$1en');\n  inflect.plural(/^(oxen)$/i, '$1');\n  inflect.plural(/(quiz)$/i, '$1zes');\n\n  inflect.singular(/s$/i, '');\n  inflect.singular(/(n)ews$/i, '$1ews');\n  inflect.singular(/([ti])a$/i, '$1um');\n  inflect.singular(/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i, '$1sis');\n  inflect.singular(/(^analy)ses$/i, '$1sis');\n  inflect.singular(/([^f])ves$/i, '$1fe');\n  inflect.singular(/(hive)s$/i, '$1');\n  inflect.singular(/(tive)s$/i, '$1');\n  inflect.singular(/(oave)s$/i, 'oaf');\n  inflect.singular(/([lr])ves$/i, '$1f');\n  inflect.singular(/([^aeiouy]|qu)ies$/i, '$1y');\n  inflect.singular(/(s)eries$/i, '$1eries');\n  inflect.singular(/(m)ovies$/i, '$1ovie');\n  inflect.singular(/(x|ch|ss|sh)es$/i, '$1');\n  inflect.singular(/([m|l])ice$/i, '$1ouse');\n  inflect.singular(/(bus)es$/i, '$1');\n  inflect.singular(/(o)es$/i, '$1');\n  inflect.singular(/(shoe)s$/i, '$1');\n  inflect.singular(/(cris|ax|test)es$/i, '$1is');\n  inflect.singular(/(octop|vir)i$/i, '$1us');\n  inflect.singular(/(alias|status)es$/i, '$1');\n  inflect.singular(/^(ox)en/i, '$1');\n  inflect.singular(/(vert|ind)ices$/i, '$1ex');\n  inflect.singular(/(matr)ices$/i, '$1ix');\n  inflect.singular(/(quiz)zes$/i, '$1');\n  inflect.singular(/(database)s$/i, '$1');\n\n  inflect.irregular('child', 'children');\n  inflect.irregular('person', 'people');\n  inflect.irregular('man', 'men');\n  inflect.irregular('child', 'children');\n  inflect.irregular('sex', 'sexes');\n  inflect.irregular('move', 'moves');\n  inflect.irregular('cow', 'kine');\n  inflect.irregular('zombie', 'zombies');\n  inflect.irregular('oaf', 'oafs', true);\n  inflect.irregular('jefe', 'jefes');\n  inflect.irregular('save', 'saves');\n  inflect.irregular('safe', 'safes');\n  inflect.irregular('fife', 'fifes');\n\n  inflect.uncountable(['equipment', 'information', 'rice', 'money', 'species', 'series', 'fish', 'sheep', 'jeans', 'sushi']);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vaS9saWIvZGVmYXVsdHMuanM/OGZlMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBEZWZhdWx0IGluZmxlY3Rpb25zXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbmZsZWN0KSB7XG5cbiAgaW5mbGVjdC5wbHVyYWwoLyQvLCAncycpO1xuICBpbmZsZWN0LnBsdXJhbCgvcyQvaSwgJ3MnKTtcbiAgaW5mbGVjdC5wbHVyYWwoLyhheHx0ZXN0KWlzJC9pLCAnJDFlcycpO1xuICBpbmZsZWN0LnBsdXJhbCgvKG9jdG9wfHZpcil1cyQvaSwgJyQxaScpO1xuICBpbmZsZWN0LnBsdXJhbCgvKG9jdG9wfHZpcilpJC9pLCAnJDFpJyk7XG4gIGluZmxlY3QucGx1cmFsKC8oYWxpYXN8c3RhdHVzKSQvaSwgJyQxZXMnKTtcbiAgaW5mbGVjdC5wbHVyYWwoLyhidSlzJC9pLCAnJDFzZXMnKTtcbiAgaW5mbGVjdC5wbHVyYWwoLyhidWZmYWx8dG9tYXQpbyQvaSwgJyQxb2VzJyk7XG4gIGluZmxlY3QucGx1cmFsKC8oW3RpXSl1bSQvaSwgJyQxYScpO1xuICBpbmZsZWN0LnBsdXJhbCgvKFt0aV0pYSQvaSwgJyQxYScpO1xuICBpbmZsZWN0LnBsdXJhbCgvc2lzJC9pLCAnc2VzJyk7XG4gIGluZmxlY3QucGx1cmFsKC8oPzooW15mYV0pZmV8KD86KG9hKWYpfChbbHJdKWYpJC9pLCAnJDF2ZXMnKTtcbiAgaW5mbGVjdC5wbHVyYWwoLyhoaXZlKSQvaSwgJyQxcycpO1xuICBpbmZsZWN0LnBsdXJhbCgvKFteYWVpb3V5XXxxdSl5JC9pLCAnJDFpZXMnKTtcbiAgaW5mbGVjdC5wbHVyYWwoLyh4fGNofHNzfHNoKSQvaSwgJyQxZXMnKTtcbiAgaW5mbGVjdC5wbHVyYWwoLyhtYXRyfHZlcnR8aW5kKSg/Oml4fGV4KSQvaSwgJyQxaWNlcycpO1xuICBpbmZsZWN0LnBsdXJhbCgvKFttfGxdKW91c2UkL2ksICckMWljZScpO1xuICBpbmZsZWN0LnBsdXJhbCgvKFttfGxdKWljZSQvaSwgJyQxaWNlJyk7XG4gIGluZmxlY3QucGx1cmFsKC9eKG94KSQvaSwgJyQxZW4nKTtcbiAgaW5mbGVjdC5wbHVyYWwoL14ob3hlbikkL2ksICckMScpO1xuICBpbmZsZWN0LnBsdXJhbCgvKHF1aXopJC9pLCAnJDF6ZXMnKTtcblxuICBpbmZsZWN0LnNpbmd1bGFyKC9zJC9pLCAnJyk7XG4gIGluZmxlY3Quc2luZ3VsYXIoLyhuKWV3cyQvaSwgJyQxZXdzJyk7XG4gIGluZmxlY3Quc2luZ3VsYXIoLyhbdGldKWEkL2ksICckMXVtJyk7XG4gIGluZmxlY3Quc2luZ3VsYXIoLygoYSluYWx5fChiKWF8KGQpaWFnbm98KHApYXJlbnRoZXwocClyb2dub3wocyl5bm9wfCh0KWhlKXNlcyQvaSwgJyQxc2lzJyk7XG4gIGluZmxlY3Quc2luZ3VsYXIoLyheYW5hbHkpc2VzJC9pLCAnJDFzaXMnKTtcbiAgaW5mbGVjdC5zaW5ndWxhcigvKFteZl0pdmVzJC9pLCAnJDFmZScpO1xuICBpbmZsZWN0LnNpbmd1bGFyKC8oaGl2ZSlzJC9pLCAnJDEnKTtcbiAgaW5mbGVjdC5zaW5ndWxhcigvKHRpdmUpcyQvaSwgJyQxJyk7XG4gIGluZmxlY3Quc2luZ3VsYXIoLyhvYXZlKXMkL2ksICdvYWYnKTtcbiAgaW5mbGVjdC5zaW5ndWxhcigvKFtscl0pdmVzJC9pLCAnJDFmJyk7XG4gIGluZmxlY3Quc2luZ3VsYXIoLyhbXmFlaW91eV18cXUpaWVzJC9pLCAnJDF5Jyk7XG4gIGluZmxlY3Quc2luZ3VsYXIoLyhzKWVyaWVzJC9pLCAnJDFlcmllcycpO1xuICBpbmZsZWN0LnNpbmd1bGFyKC8obSlvdmllcyQvaSwgJyQxb3ZpZScpO1xuICBpbmZsZWN0LnNpbmd1bGFyKC8oeHxjaHxzc3xzaCllcyQvaSwgJyQxJyk7XG4gIGluZmxlY3Quc2luZ3VsYXIoLyhbbXxsXSlpY2UkL2ksICckMW91c2UnKTtcbiAgaW5mbGVjdC5zaW5ndWxhcigvKGJ1cyllcyQvaSwgJyQxJyk7XG4gIGluZmxlY3Quc2luZ3VsYXIoLyhvKWVzJC9pLCAnJDEnKTtcbiAgaW5mbGVjdC5zaW5ndWxhcigvKHNob2UpcyQvaSwgJyQxJyk7XG4gIGluZmxlY3Quc2luZ3VsYXIoLyhjcmlzfGF4fHRlc3QpZXMkL2ksICckMWlzJyk7XG4gIGluZmxlY3Quc2luZ3VsYXIoLyhvY3RvcHx2aXIpaSQvaSwgJyQxdXMnKTtcbiAgaW5mbGVjdC5zaW5ndWxhcigvKGFsaWFzfHN0YXR1cyllcyQvaSwgJyQxJyk7XG4gIGluZmxlY3Quc2luZ3VsYXIoL14ob3gpZW4vaSwgJyQxJyk7XG4gIGluZmxlY3Quc2luZ3VsYXIoLyh2ZXJ0fGluZClpY2VzJC9pLCAnJDFleCcpO1xuICBpbmZsZWN0LnNpbmd1bGFyKC8obWF0cilpY2VzJC9pLCAnJDFpeCcpO1xuICBpbmZsZWN0LnNpbmd1bGFyKC8ocXVpeil6ZXMkL2ksICckMScpO1xuICBpbmZsZWN0LnNpbmd1bGFyKC8oZGF0YWJhc2UpcyQvaSwgJyQxJyk7XG5cbiAgaW5mbGVjdC5pcnJlZ3VsYXIoJ2NoaWxkJywgJ2NoaWxkcmVuJyk7XG4gIGluZmxlY3QuaXJyZWd1bGFyKCdwZXJzb24nLCAncGVvcGxlJyk7XG4gIGluZmxlY3QuaXJyZWd1bGFyKCdtYW4nLCAnbWVuJyk7XG4gIGluZmxlY3QuaXJyZWd1bGFyKCdjaGlsZCcsICdjaGlsZHJlbicpO1xuICBpbmZsZWN0LmlycmVndWxhcignc2V4JywgJ3NleGVzJyk7XG4gIGluZmxlY3QuaXJyZWd1bGFyKCdtb3ZlJywgJ21vdmVzJyk7XG4gIGluZmxlY3QuaXJyZWd1bGFyKCdjb3cnLCAna2luZScpO1xuICBpbmZsZWN0LmlycmVndWxhcignem9tYmllJywgJ3pvbWJpZXMnKTtcbiAgaW5mbGVjdC5pcnJlZ3VsYXIoJ29hZicsICdvYWZzJywgdHJ1ZSk7XG4gIGluZmxlY3QuaXJyZWd1bGFyKCdqZWZlJywgJ2plZmVzJyk7XG4gIGluZmxlY3QuaXJyZWd1bGFyKCdzYXZlJywgJ3NhdmVzJyk7XG4gIGluZmxlY3QuaXJyZWd1bGFyKCdzYWZlJywgJ3NhZmVzJyk7XG4gIGluZmxlY3QuaXJyZWd1bGFyKCdmaWZlJywgJ2ZpZmVzJyk7XG5cbiAgaW5mbGVjdC51bmNvdW50YWJsZShbJ2VxdWlwbWVudCcsICdpbmZvcm1hdGlvbicsICdyaWNlJywgJ21vbmV5JywgJ3NwZWNpZXMnLCAnc2VyaWVzJywgJ2Zpc2gnLCAnc2hlZXAnLCAnamVhbnMnLCAnc3VzaGknXSk7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vaS9saWIvZGVmYXVsdHMuanNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 1 */
/***/ function(module, exports) {

eval("// Some utility functions in js\n\nvar u = module.exports = {\n  array: {\n    // Returns a copy of the array with the value removed once\n    //\n    //     [1, 2, 3, 1].del 1 #=> [2, 3, 1]\n    //     [1, 2, 3].del 4    #=> [1, 2, 3]\n    del: function (arr, val) {\n      var index = arr.indexOf(val);\n      if (index != -1) {\n        if (index == 0) {\n         return arr.slice(1)\n        } else {\n          return arr.slice(0, index).concat(arr.slice(index+1));\n        }\n      } else {\n        return arr;\n      }\n    },\n\n    // Returns the first element of the array\n    //\n    //     [1, 2, 3].first() #=> 1\n    first: function(arr) {\n      return arr[0];\n    },\n\n    // Returns the last element of the array\n    //\n    //     [1, 2, 3].last()  #=> 3\n    last: function(arr) {\n      return arr[arr.length-1];\n    }\n  },\n  string: {\n    // Returns a copy of str with all occurrences of pattern replaced with either replacement or the return value of a function.\n    // The pattern will typically be a Regexp; if it is a String then no regular expression metacharacters will be interpreted\n    // (that is /\\d/ will match a digit, but ‘\\d’ will match a backslash followed by a ‘d’).\n    //\n    // In the function form, the current match object is passed in as a parameter to the function, and variables such as\n    // $[1], $[2], $[3] (where $ is the match object) will be set appropriately. The value returned by the function will be\n    // substituted for the match on each call.\n    //\n    // The result inherits any tainting in the original string or any supplied replacement string.\n    //\n    //     \"hello\".gsub /[aeiou]/, '*'      #=> \"h*ll*\"\n    //     \"hello\".gsub /[aeiou]/, '<$1>'   #=> \"h<e>ll<o>\"\n    //     \"hello\".gsub /[aeiou]/, ($) {\n    //       \"<#{$[1]}>\"                    #=> \"h<e>ll<o>\"\n    //\n    gsub: function (str, pattern, replacement) {\n      var i, match, matchCmpr, matchCmprPrev, replacementStr, result, self;\n      if (!((pattern != null) && (replacement != null))) return u.string.value(str);\n      result = '';\n      self = str;\n      while (self.length > 0) {\n        if ((match = self.match(pattern))) {\n          result += self.slice(0, match.index);\n          if (typeof replacement === 'function') {\n            match[1] = match[1] || match[0];\n            result += replacement(match);\n          } else if (replacement.match(/\\$[1-9]/)) {\n            matchCmprPrev = match;\n            matchCmpr = u.array.del(match, void 0);\n            while (matchCmpr !== matchCmprPrev) {\n              matchCmprPrev = matchCmpr;\n              matchCmpr = u.array.del(matchCmpr, void 0);\n            }\n            match[1] = match[1] || match[0];\n            replacementStr = replacement;\n            for (i = 1; i <= 9; i++) {\n              if (matchCmpr[i]) {\n                replacementStr = u.string.gsub(replacementStr, new RegExp(\"\\\\\\$\" + i), matchCmpr[i]);\n              }\n            }\n            result += replacementStr;\n          } else {\n            result += replacement;\n          }\n          self = self.slice(match.index + match[0].length);\n        } else {\n          result += self;\n          self = '';\n        }\n      }\n      return result;\n    },\n\n    // Returns a copy of the String with the first letter being upper case\n    //\n    //     \"hello\".upcase #=> \"Hello\"\n    upcase: function(str) {\n      var self = u.string.gsub(str, /_([a-z])/, function ($) {\n        return \"_\" + $[1].toUpperCase();\n      });\n      self = u.string.gsub(self, /\\/([a-z])/, function ($) {\n        return \"/\" + $[1].toUpperCase();\n      });\n      return self[0].toUpperCase() + self.substr(1);\n    },\n\n    // Returns a copy of capitalized string\n    //\n    //     \"employee salary\" #=> \"Employee Salary\"\n    capitalize: function (str, spaces) {\n      var self = str.toLowerCase();\n      if(!spaces) {\n        self = u.string.gsub(self, /\\s([a-z])/, function ($) {\n          return \" \" + $[1].toUpperCase();\n        });\n      }\n      return self[0].toUpperCase() + self.substr(1);\n    },\n\n    // Returns a copy of the String with the first letter being lower case\n    //\n    //     \"HELLO\".downcase #=> \"hELLO\"\n    downcase: function(str) {\n      var self = u.string.gsub(str, /_([A-Z])/, function ($) {\n        return \"_\" + $[1].toLowerCase();\n      });\n      self = u.string.gsub(self, /\\/([A-Z])/, function ($) {\n        return \"/\" + $[1].toLowerCase();\n      });\n      return self[0].toLowerCase() + self.substr(1);\n    },\n\n    // Returns a string value for the String object\n    //\n    //     \"hello\".value() #=> \"hello\"\n    value: function (str) {\n      return str.substr(0);\n    }\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vaS9saWIvdXRpbC5qcz8wNzA0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNvbWUgdXRpbGl0eSBmdW5jdGlvbnMgaW4ganNcblxudmFyIHUgPSBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgYXJyYXk6IHtcbiAgICAvLyBSZXR1cm5zIGEgY29weSBvZiB0aGUgYXJyYXkgd2l0aCB0aGUgdmFsdWUgcmVtb3ZlZCBvbmNlXG4gICAgLy9cbiAgICAvLyAgICAgWzEsIDIsIDMsIDFdLmRlbCAxICM9PiBbMiwgMywgMV1cbiAgICAvLyAgICAgWzEsIDIsIDNdLmRlbCA0ICAgICM9PiBbMSwgMiwgM11cbiAgICBkZWw6IGZ1bmN0aW9uIChhcnIsIHZhbCkge1xuICAgICAgdmFyIGluZGV4ID0gYXJyLmluZGV4T2YodmFsKTtcbiAgICAgIGlmIChpbmRleCAhPSAtMSkge1xuICAgICAgICBpZiAoaW5kZXggPT0gMCkge1xuICAgICAgICAgcmV0dXJuIGFyci5zbGljZSgxKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBhcnIuc2xpY2UoMCwgaW5kZXgpLmNvbmNhdChhcnIuc2xpY2UoaW5kZXgrMSkpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gYXJyO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvLyBSZXR1cm5zIHRoZSBmaXJzdCBlbGVtZW50IG9mIHRoZSBhcnJheVxuICAgIC8vXG4gICAgLy8gICAgIFsxLCAyLCAzXS5maXJzdCgpICM9PiAxXG4gICAgZmlyc3Q6IGZ1bmN0aW9uKGFycikge1xuICAgICAgcmV0dXJuIGFyclswXTtcbiAgICB9LFxuXG4gICAgLy8gUmV0dXJucyB0aGUgbGFzdCBlbGVtZW50IG9mIHRoZSBhcnJheVxuICAgIC8vXG4gICAgLy8gICAgIFsxLCAyLCAzXS5sYXN0KCkgICM9PiAzXG4gICAgbGFzdDogZnVuY3Rpb24oYXJyKSB7XG4gICAgICByZXR1cm4gYXJyW2Fyci5sZW5ndGgtMV07XG4gICAgfVxuICB9LFxuICBzdHJpbmc6IHtcbiAgICAvLyBSZXR1cm5zIGEgY29weSBvZiBzdHIgd2l0aCBhbGwgb2NjdXJyZW5jZXMgb2YgcGF0dGVybiByZXBsYWNlZCB3aXRoIGVpdGhlciByZXBsYWNlbWVudCBvciB0aGUgcmV0dXJuIHZhbHVlIG9mIGEgZnVuY3Rpb24uXG4gICAgLy8gVGhlIHBhdHRlcm4gd2lsbCB0eXBpY2FsbHkgYmUgYSBSZWdleHA7IGlmIGl0IGlzIGEgU3RyaW5nIHRoZW4gbm8gcmVndWxhciBleHByZXNzaW9uIG1ldGFjaGFyYWN0ZXJzIHdpbGwgYmUgaW50ZXJwcmV0ZWRcbiAgICAvLyAodGhhdCBpcyAvXFxkLyB3aWxsIG1hdGNoIGEgZGlnaXQsIGJ1dCDigJhcXGTigJkgd2lsbCBtYXRjaCBhIGJhY2tzbGFzaCBmb2xsb3dlZCBieSBhIOKAmGTigJkpLlxuICAgIC8vXG4gICAgLy8gSW4gdGhlIGZ1bmN0aW9uIGZvcm0sIHRoZSBjdXJyZW50IG1hdGNoIG9iamVjdCBpcyBwYXNzZWQgaW4gYXMgYSBwYXJhbWV0ZXIgdG8gdGhlIGZ1bmN0aW9uLCBhbmQgdmFyaWFibGVzIHN1Y2ggYXNcbiAgICAvLyAkWzFdLCAkWzJdLCAkWzNdICh3aGVyZSAkIGlzIHRoZSBtYXRjaCBvYmplY3QpIHdpbGwgYmUgc2V0IGFwcHJvcHJpYXRlbHkuIFRoZSB2YWx1ZSByZXR1cm5lZCBieSB0aGUgZnVuY3Rpb24gd2lsbCBiZVxuICAgIC8vIHN1YnN0aXR1dGVkIGZvciB0aGUgbWF0Y2ggb24gZWFjaCBjYWxsLlxuICAgIC8vXG4gICAgLy8gVGhlIHJlc3VsdCBpbmhlcml0cyBhbnkgdGFpbnRpbmcgaW4gdGhlIG9yaWdpbmFsIHN0cmluZyBvciBhbnkgc3VwcGxpZWQgcmVwbGFjZW1lbnQgc3RyaW5nLlxuICAgIC8vXG4gICAgLy8gICAgIFwiaGVsbG9cIi5nc3ViIC9bYWVpb3VdLywgJyonICAgICAgIz0+IFwiaCpsbCpcIlxuICAgIC8vICAgICBcImhlbGxvXCIuZ3N1YiAvW2FlaW91XS8sICc8JDE+JyAgICM9PiBcImg8ZT5sbDxvPlwiXG4gICAgLy8gICAgIFwiaGVsbG9cIi5nc3ViIC9bYWVpb3VdLywgKCQpIHtcbiAgICAvLyAgICAgICBcIjwjeyRbMV19PlwiICAgICAgICAgICAgICAgICAgICAjPT4gXCJoPGU+bGw8bz5cIlxuICAgIC8vXG4gICAgZ3N1YjogZnVuY3Rpb24gKHN0ciwgcGF0dGVybiwgcmVwbGFjZW1lbnQpIHtcbiAgICAgIHZhciBpLCBtYXRjaCwgbWF0Y2hDbXByLCBtYXRjaENtcHJQcmV2LCByZXBsYWNlbWVudFN0ciwgcmVzdWx0LCBzZWxmO1xuICAgICAgaWYgKCEoKHBhdHRlcm4gIT0gbnVsbCkgJiYgKHJlcGxhY2VtZW50ICE9IG51bGwpKSkgcmV0dXJuIHUuc3RyaW5nLnZhbHVlKHN0cik7XG4gICAgICByZXN1bHQgPSAnJztcbiAgICAgIHNlbGYgPSBzdHI7XG4gICAgICB3aGlsZSAoc2VsZi5sZW5ndGggPiAwKSB7XG4gICAgICAgIGlmICgobWF0Y2ggPSBzZWxmLm1hdGNoKHBhdHRlcm4pKSkge1xuICAgICAgICAgIHJlc3VsdCArPSBzZWxmLnNsaWNlKDAsIG1hdGNoLmluZGV4KTtcbiAgICAgICAgICBpZiAodHlwZW9mIHJlcGxhY2VtZW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBtYXRjaFsxXSA9IG1hdGNoWzFdIHx8IG1hdGNoWzBdO1xuICAgICAgICAgICAgcmVzdWx0ICs9IHJlcGxhY2VtZW50KG1hdGNoKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHJlcGxhY2VtZW50Lm1hdGNoKC9cXCRbMS05XS8pKSB7XG4gICAgICAgICAgICBtYXRjaENtcHJQcmV2ID0gbWF0Y2g7XG4gICAgICAgICAgICBtYXRjaENtcHIgPSB1LmFycmF5LmRlbChtYXRjaCwgdm9pZCAwKTtcbiAgICAgICAgICAgIHdoaWxlIChtYXRjaENtcHIgIT09IG1hdGNoQ21wclByZXYpIHtcbiAgICAgICAgICAgICAgbWF0Y2hDbXByUHJldiA9IG1hdGNoQ21wcjtcbiAgICAgICAgICAgICAgbWF0Y2hDbXByID0gdS5hcnJheS5kZWwobWF0Y2hDbXByLCB2b2lkIDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbWF0Y2hbMV0gPSBtYXRjaFsxXSB8fCBtYXRjaFswXTtcbiAgICAgICAgICAgIHJlcGxhY2VtZW50U3RyID0gcmVwbGFjZW1lbnQ7XG4gICAgICAgICAgICBmb3IgKGkgPSAxOyBpIDw9IDk7IGkrKykge1xuICAgICAgICAgICAgICBpZiAobWF0Y2hDbXByW2ldKSB7XG4gICAgICAgICAgICAgICAgcmVwbGFjZW1lbnRTdHIgPSB1LnN0cmluZy5nc3ViKHJlcGxhY2VtZW50U3RyLCBuZXcgUmVnRXhwKFwiXFxcXFxcJFwiICsgaSksIG1hdGNoQ21wcltpXSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc3VsdCArPSByZXBsYWNlbWVudFN0cjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzdWx0ICs9IHJlcGxhY2VtZW50O1xuICAgICAgICAgIH1cbiAgICAgICAgICBzZWxmID0gc2VsZi5zbGljZShtYXRjaC5pbmRleCArIG1hdGNoWzBdLmxlbmd0aCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVzdWx0ICs9IHNlbGY7XG4gICAgICAgICAgc2VsZiA9ICcnO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG5cbiAgICAvLyBSZXR1cm5zIGEgY29weSBvZiB0aGUgU3RyaW5nIHdpdGggdGhlIGZpcnN0IGxldHRlciBiZWluZyB1cHBlciBjYXNlXG4gICAgLy9cbiAgICAvLyAgICAgXCJoZWxsb1wiLnVwY2FzZSAjPT4gXCJIZWxsb1wiXG4gICAgdXBjYXNlOiBmdW5jdGlvbihzdHIpIHtcbiAgICAgIHZhciBzZWxmID0gdS5zdHJpbmcuZ3N1YihzdHIsIC9fKFthLXpdKS8sIGZ1bmN0aW9uICgkKSB7XG4gICAgICAgIHJldHVybiBcIl9cIiArICRbMV0udG9VcHBlckNhc2UoKTtcbiAgICAgIH0pO1xuICAgICAgc2VsZiA9IHUuc3RyaW5nLmdzdWIoc2VsZiwgL1xcLyhbYS16XSkvLCBmdW5jdGlvbiAoJCkge1xuICAgICAgICByZXR1cm4gXCIvXCIgKyAkWzFdLnRvVXBwZXJDYXNlKCk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBzZWxmWzBdLnRvVXBwZXJDYXNlKCkgKyBzZWxmLnN1YnN0cigxKTtcbiAgICB9LFxuXG4gICAgLy8gUmV0dXJucyBhIGNvcHkgb2YgY2FwaXRhbGl6ZWQgc3RyaW5nXG4gICAgLy9cbiAgICAvLyAgICAgXCJlbXBsb3llZSBzYWxhcnlcIiAjPT4gXCJFbXBsb3llZSBTYWxhcnlcIlxuICAgIGNhcGl0YWxpemU6IGZ1bmN0aW9uIChzdHIsIHNwYWNlcykge1xuICAgICAgdmFyIHNlbGYgPSBzdHIudG9Mb3dlckNhc2UoKTtcbiAgICAgIGlmKCFzcGFjZXMpIHtcbiAgICAgICAgc2VsZiA9IHUuc3RyaW5nLmdzdWIoc2VsZiwgL1xccyhbYS16XSkvLCBmdW5jdGlvbiAoJCkge1xuICAgICAgICAgIHJldHVybiBcIiBcIiArICRbMV0udG9VcHBlckNhc2UoKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gc2VsZlswXS50b1VwcGVyQ2FzZSgpICsgc2VsZi5zdWJzdHIoMSk7XG4gICAgfSxcblxuICAgIC8vIFJldHVybnMgYSBjb3B5IG9mIHRoZSBTdHJpbmcgd2l0aCB0aGUgZmlyc3QgbGV0dGVyIGJlaW5nIGxvd2VyIGNhc2VcbiAgICAvL1xuICAgIC8vICAgICBcIkhFTExPXCIuZG93bmNhc2UgIz0+IFwiaEVMTE9cIlxuICAgIGRvd25jYXNlOiBmdW5jdGlvbihzdHIpIHtcbiAgICAgIHZhciBzZWxmID0gdS5zdHJpbmcuZ3N1YihzdHIsIC9fKFtBLVpdKS8sIGZ1bmN0aW9uICgkKSB7XG4gICAgICAgIHJldHVybiBcIl9cIiArICRbMV0udG9Mb3dlckNhc2UoKTtcbiAgICAgIH0pO1xuICAgICAgc2VsZiA9IHUuc3RyaW5nLmdzdWIoc2VsZiwgL1xcLyhbQS1aXSkvLCBmdW5jdGlvbiAoJCkge1xuICAgICAgICByZXR1cm4gXCIvXCIgKyAkWzFdLnRvTG93ZXJDYXNlKCk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBzZWxmWzBdLnRvTG93ZXJDYXNlKCkgKyBzZWxmLnN1YnN0cigxKTtcbiAgICB9LFxuXG4gICAgLy8gUmV0dXJucyBhIHN0cmluZyB2YWx1ZSBmb3IgdGhlIFN0cmluZyBvYmplY3RcbiAgICAvL1xuICAgIC8vICAgICBcImhlbGxvXCIudmFsdWUoKSAjPT4gXCJoZWxsb1wiXG4gICAgdmFsdWU6IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgIHJldHVybiBzdHIuc3Vic3RyKDApO1xuICAgIH1cbiAgfVxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2kvbGliL3V0aWwuanNcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

eval("// Requiring modules\n\nmodule.exports = function (attach) {\n  var methods = __webpack_require__(4);\n\n  if (attach) {\n    __webpack_require__(5)(methods);\n  }\n\n  return methods\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vaS9saWIvaW5mbGVjdC5qcz81YjY4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFJlcXVpcmluZyBtb2R1bGVzXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGF0dGFjaCkge1xuICB2YXIgbWV0aG9kcyA9IHJlcXVpcmUoJy4vbWV0aG9kcycpO1xuXG4gIGlmIChhdHRhY2gpIHtcbiAgICByZXF1aXJlKCcuL25hdGl2ZScpKG1ldGhvZHMpO1xuICB9XG5cbiAgcmV0dXJuIG1ldGhvZHNcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vaS9saWIvaW5mbGVjdC5qc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

eval("// A singleton instance of this class is yielded by Inflector.inflections, which can then be used to specify additional\n// inflection rules. Examples:\n//\n//     BulletSupport.Inflector.inflect ($) ->\n//       $.plural /^(ox)$/i, '$1en'\n//       $.singular /^(ox)en/i, '$1'\n//\n//       $.irregular 'octopus', 'octopi'\n//\n//       $.uncountable \"equipment\"\n//\n// New rules are added at the top. So in the example above, the irregular rule for octopus will now be the first of the\n// pluralization and singularization rules that is runs. This guarantees that your rules run before any of the rules that may\n// already have been loaded.\n\nvar util = __webpack_require__(1);\n\nvar Inflections = function () {\n  this.plurals = [];\n  this.singulars = [];\n  this.uncountables = [];\n  this.humans = [];\n  __webpack_require__(0)(this);\n  return this;\n};\n\n// Specifies a new pluralization rule and its replacement. The rule can either be a string or a regular expression.\n// The replacement should always be a string that may include references to the matched data from the rule.\nInflections.prototype.plural = function (rule, replacement) {\n  if (typeof rule == 'string') {\n    this.uncountables = util.array.del(this.uncountables, rule);\n  }\n  this.uncountables = util.array.del(this.uncountables, replacement);\n  this.plurals.unshift([rule, replacement]);\n};\n\n// Specifies a new singularization rule and its replacement. The rule can either be a string or a regular expression.\n// The replacement should always be a string that may include references to the matched data from the rule.\nInflections.prototype.singular = function (rule, replacement) {\n  if (typeof rule == 'string') {\n    this.uncountables = util.array.del(this.uncountables, rule);\n  }\n  this.uncountables = util.array.del(this.uncountables, replacement);\n  this.singulars.unshift([rule, replacement]);\n};\n\n// Specifies a new irregular that applies to both pluralization and singularization at the same time. This can only be used\n// for strings, not regular expressions. You simply pass the irregular in singular and plural form.\n//\n//     irregular 'octopus', 'octopi'\n//     irregular 'person', 'people'\nInflections.prototype.irregular =  function (singular, plural, fullMatchRequired) {\n  this.uncountables = util.array.del(this.uncountables, singular);\n  this.uncountables = util.array.del(this.uncountables, plural);\n  var prefix = \"\";\n  if (fullMatchRequired) {\n    prefix = \"^\";\n  }\n  if (singular[0].toUpperCase() == plural[0].toUpperCase()) {\n    this.plural(new RegExp(\"(\" + prefix + singular[0] + \")\" + singular.slice(1) + \"$\", \"i\"), '$1' + plural.slice(1));\n    this.plural(new RegExp(\"(\" + prefix + plural[0] + \")\" + plural.slice(1) + \"$\", \"i\"), '$1' + plural.slice(1));\n    this.singular(new RegExp(\"(\" + prefix + plural[0] + \")\" + plural.slice(1) + \"$\", \"i\"), '$1' + singular.slice(1));\n  } else {\n    this.plural(new RegExp(prefix + (singular[0].toUpperCase()) + singular.slice(1) + \"$\"), plural[0].toUpperCase() + plural.slice(1));\n    this.plural(new RegExp(prefix + (singular[0].toLowerCase()) + singular.slice(1) + \"$\"), plural[0].toLowerCase() + plural.slice(1));\n    this.plural(new RegExp(prefix + (plural[0].toUpperCase()) + plural.slice(1) + \"$\"), plural[0].toUpperCase() + plural.slice(1));\n    this.plural(new RegExp(prefix + (plural[0].toLowerCase()) + plural.slice(1) + \"$\"), plural[0].toLowerCase() + plural.slice(1));\n    this.singular(new RegExp(prefix + (plural[0].toUpperCase()) + plural.slice(1) + \"$\"), singular[0].toUpperCase() + singular.slice(1));\n    this.singular(new RegExp(prefix + (plural[0].toLowerCase()) + plural.slice(1) + \"$\"), singular[0].toLowerCase() + singular.slice(1));\n  }\n};\n\n// Specifies a humanized form of a string by a regular expression rule or by a string mapping.\n// When using a regular expression based replacement, the normal humanize formatting is called after the replacement.\n// When a string is used, the human form should be specified as desired (example: 'The name', not 'the_name')\n//\n//     human /(.*)_cnt$/i, '$1_count'\n//     human \"legacy_col_person_name\", \"Name\"\nInflections.prototype.human = function (rule, replacement) {\n  this.humans.unshift([rule, replacement]);\n}\n\n// Add uncountable words that shouldn't be attempted inflected.\n//\n//     uncountable \"money\"\n//     uncountable [\"money\", \"information\"]\nInflections.prototype.uncountable = function (words) {\n  this.uncountables = this.uncountables.concat(words);\n}\n\n// Clears the loaded inflections within a given scope (default is _'all'_).\n// Give the scope as a symbol of the inflection type, the options are: _'plurals'_,\n// _'singulars'_, _'uncountables'_, _'humans'_.\n//\n//     clear 'all'\n//     clear 'plurals'\nInflections.prototype.clear = function (scope) {\n  if (scope == null) scope = 'all';\n  switch (scope) {\n    case 'all':\n      this.plurals = [];\n      this.singulars = [];\n      this.uncountables = [];\n      this.humans = [];\n    default:\n      this[scope] = [];\n  }\n}\n\n// Clears the loaded inflections and initializes them to [default](../inflections.html)\nInflections.prototype.default = function () {\n  this.plurals = [];\n  this.singulars = [];\n  this.uncountables = [];\n  this.humans = [];\n  __webpack_require__(0)(this);\n  return this;\n};\n\nmodule.exports = new Inflections();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

eval("// The Inflector transforms words from singular to plural, class names to table names, modularized class names to ones without,\n// and class names to foreign keys. The default inflections for pluralization, singularization, and uncountable words are kept\n// in inflections.coffee\n//\n// If you discover an incorrect inflection and require it for your application, you'll need\n// to correct it yourself (explained below).\n\nvar util = __webpack_require__(1);\n\nvar inflect = module.exports;\n\n// Import [inflections](inflections.html) instance\ninflect.inflections = __webpack_require__(3)\n\n// Gives easy access to add inflections to this class\ninflect.inflect = function (inflections_function) {\n  inflections_function(inflect.inflections);\n};\n\n// By default, _camelize_ converts strings to UpperCamelCase. If the argument to _camelize_\n// is set to _false_ then _camelize_ produces lowerCamelCase.\n//\n// _camelize_ will also convert '/' to '.' which is useful for converting paths to namespaces.\n//\n//     \"bullet_record\".camelize()             // => \"BulletRecord\"\n//     \"bullet_record\".camelize(false)        // => \"bulletRecord\"\n//     \"bullet_record/errors\".camelize()      // => \"BulletRecord.Errors\"\n//     \"bullet_record/errors\".camelize(false) // => \"bulletRecord.Errors\"\n//\n// As a rule of thumb you can think of _camelize_ as the inverse of _underscore_,\n// though there are cases where that does not hold:\n//\n//     \"SSLError\".underscore.camelize // => \"SslError\"\ninflect.camelize = function(lower_case_and_underscored_word, first_letter_in_uppercase) {\n  var result;\n  if (first_letter_in_uppercase == null) first_letter_in_uppercase = true;\n  result = util.string.gsub(lower_case_and_underscored_word, /\\/(.?)/, function($) {\n    return \".\" + (util.string.upcase($[1]));\n  });\n  result = util.string.gsub(result, /(?:_)(.)/, function($) {\n    return util.string.upcase($[1]);\n  });\n  if (first_letter_in_uppercase) {\n    return util.string.upcase(result);\n  } else {\n    return util.string.downcase(result);\n  }\n};\n\n// Makes an underscored, lowercase form from the expression in the string.\n//\n// Changes '.' to '/' to convert namespaces to paths.\n//\n//     \"BulletRecord\".underscore()         // => \"bullet_record\"\n//     \"BulletRecord.Errors\".underscore()  // => \"bullet_record/errors\"\n//\n// As a rule of thumb you can think of +underscore+ as the inverse of +camelize+,\n// though there are cases where that does not hold:\n//\n//     \"SSLError\".underscore().camelize() // => \"SslError\"\ninflect.underscore = function (camel_cased_word) {\n  var self;\n  self = util.string.gsub(camel_cased_word, /\\./, '/');\n  self = util.string.gsub(self, /([A-Z]+)([A-Z][a-z])/, \"$1_$2\");\n  self = util.string.gsub(self, /([a-z\\d])([A-Z])/, \"$1_$2\");\n  self = util.string.gsub(self, /-/, '_');\n  return self.toLowerCase();\n};\n\n// Replaces underscores with dashes in the string.\n//\n//     \"puni_puni\".dasherize()   // => \"puni-puni\"\ninflect.dasherize = function (underscored_word) {\n  return util.string.gsub(underscored_word, /_/, '-');\n};\n\n// Removes the module part from the expression in the string.\n//\n//     \"BulletRecord.String.Inflections\".demodulize() // => \"Inflections\"\n//     \"Inflections\".demodulize()                     // => \"Inflections\"\ninflect.demodulize = function (class_name_in_module) {\n  return util.string.gsub(class_name_in_module, /^.*\\./, '');\n};\n\n// Creates a foreign key name from a class name.\n// _separate_class_name_and_id_with_underscore_ sets whether\n// the method should put '_' between the name and 'id'.\n//\n//     \"Message\".foreign_key()      // => \"message_id\"\n//     \"Message\".foreign_key(false) // => \"messageid\"\n//     \"Admin::Post\".foreign_key()  // => \"post_id\"\ninflect.foreign_key = function (class_name, separate_class_name_and_id_with_underscore) {\n  if (separate_class_name_and_id_with_underscore == null) {\n    separate_class_name_and_id_with_underscore = true;\n  }\n  return inflect.underscore(inflect.demodulize(class_name)) + (separate_class_name_and_id_with_underscore ? \"_id\" : \"id\");\n};\n\n// Turns a number into an ordinal string used to denote the position in an\n// ordered sequence such as 1st, 2nd, 3rd, 4th.\n//\n//     ordinalize(1)     // => \"1st\"\n//     ordinalize(2)     // => \"2nd\"\n//     ordinalize(1002)  // => \"1002nd\"\n//     ordinalize(1003)  // => \"1003rd\"\n//     ordinalize(-11)   // => \"-11th\"\n//     ordinalize(-1021) // => \"-1021st\"\ninflect.ordinalize = function (number) {\n  var _ref;\n  number = parseInt(number);\n  if ((_ref = Math.abs(number) % 100) === 11 || _ref === 12 || _ref === 13) {\n    return \"\" + number + \"th\";\n  } else {\n    switch (Math.abs(number) % 10) {\n      case 1:\n        return \"\" + number + \"st\";\n      case 2:\n        return \"\" + number + \"nd\";\n      case 3:\n        return \"\" + number + \"rd\";\n      default:\n        return \"\" + number + \"th\";\n    }\n  }\n};\n\n// Checks a given word for uncountability\n//\n//     \"money\".uncountability()     // => true\n//     \"my money\".uncountability()  // => true\ninflect.uncountability = function (word) {\n  return inflect.inflections.uncountables.some(function(ele, ind, arr) {\n    return word.match(new RegExp(\"(\\\\b|_)\" + ele + \"$\", 'i')) != null;\n  });\n};\n\n// Returns the plural form of the word in the string.\n//\n//     \"post\".pluralize()             // => \"posts\"\n//     \"octopus\".pluralize()          // => \"octopi\"\n//     \"sheep\".pluralize()            // => \"sheep\"\n//     \"words\".pluralize()            // => \"words\"\n//     \"CamelOctopus\".pluralize()     // => \"CamelOctopi\"\ninflect.pluralize = function (word) {\n  var plural, result;\n  result = word;\n  if (word === '' || inflect.uncountability(word)) {\n    return result;\n  } else {\n    for (var i = 0; i < inflect.inflections.plurals.length; i++) {\n      plural = inflect.inflections.plurals[i];\n      result = util.string.gsub(result, plural[0], plural[1]);\n      if (word.match(plural[0]) != null) break;\n    }\n    return result;\n  }\n};\n\n// The reverse of _pluralize_, returns the singular form of a word in a string.\n//\n//     \"posts\".singularize()            // => \"post\"\n//     \"octopi\".singularize()           // => \"octopus\"\n//     \"sheep\".singularize()            // => \"sheep\"\n//     \"word\".singularize()             // => \"word\"\n//     \"CamelOctopi\".singularize()      // => \"CamelOctopus\"\ninflect.singularize = function (word) {\n  var result, singular;\n  result = word;\n  if (word === '' || inflect.uncountability(word)) {\n    return result;\n  } else {\n    for (var i = 0; i < inflect.inflections.singulars.length; i++) {\n      singular = inflect.inflections.singulars[i];\n      result = util.string.gsub(result, singular[0], singular[1]);\n      if (word.match(singular[0])) break;\n    }\n    return result;\n  }\n};\n\n// Capitalizes the first word and turns underscores into spaces and strips a\n// trailing \"_id\", if any. Like _titleize_, this is meant for creating pretty output.\n//\n//     \"employee_salary\".humanize()   // => \"Employee salary\"\n//     \"author_id\".humanize()         // => \"Author\"\ninflect.humanize = function (lower_case_and_underscored_word) {\n  var human, result;\n  result = lower_case_and_underscored_word;\n  for (var i = 0; i < inflect.inflections.humans.length; i++) {\n    human = inflect.inflections.humans[i];\n    result = util.string.gsub(result, human[0], human[1]);\n  }\n  result = util.string.gsub(result, /_id$/, \"\");\n  result = util.string.gsub(result, /_/, \" \");\n  return util.string.capitalize(result, true);\n};\n\n// Capitalizes all the words and replaces some characters in the string to create\n// a nicer looking title. _titleize_ is meant for creating pretty output. It is not\n// used in the Bullet internals.\n//\n//\n//     \"man from the boondocks\".titleize()   // => \"Man From The Boondocks\"\n//     \"x-men: the last stand\".titleize()    // => \"X Men: The Last Stand\"\ninflect.titleize = function (word) {\n  var self;\n  self = inflect.humanize(inflect.underscore(word));\n  return util.string.capitalize(self);\n};\n\n// Create the name of a table like Bullet does for models to table names. This method\n// uses the _pluralize_ method on the last word in the string.\n//\n//     \"RawScaledScorer\".tableize()   // => \"raw_scaled_scorers\"\n//     \"egg_and_ham\".tableize()       // => \"egg_and_hams\"\n//     \"fancyCategory\".tableize()     // => \"fancy_categories\"\ninflect.tableize = function (class_name) {\n  return inflect.pluralize(inflect.underscore(class_name));\n};\n\n// Create a class name from a plural table name like Bullet does for table names to models.\n// Note that this returns a string and not a Class.\n//\n//     \"egg_and_hams\".classify()   // => \"EggAndHam\"\n//     \"posts\".classify()          // => \"Post\"\n//\n// Singular names are not handled correctly:\n//\n//     \"business\".classify()       // => \"Busines\"\ninflect.classify = function (table_name) {\n  return inflect.camelize(inflect.singularize(util.string.gsub(table_name, /.*\\./, '')));\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 5 */
/***/ function(module, exports) {

eval("module.exports = function (obj) {\n\n  var addProperty = function (method, func) {\n    String.prototype.__defineGetter__(method, func);\n  }\n\n  var stringPrototypeBlacklist = [\n    '__defineGetter__', '__defineSetter__', '__lookupGetter__', '__lookupSetter__', 'charAt', 'constructor',\n    'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf', 'charCodeAt',\n    'indexOf', 'lastIndexof', 'length', 'localeCompare', 'match', 'replace', 'search', 'slice', 'split', 'substring',\n    'toLocaleLowerCase', 'toLocaleUpperCase', 'toLowerCase', 'toUpperCase', 'trim', 'trimLeft', 'trimRight', 'gsub'\n  ];\n\n  Object.keys(obj).forEach(function (key) {\n    if (key != 'inflect' && key != 'inflections') {\n      if (stringPrototypeBlacklist.indexOf(key) !== -1) {\n        console.log('warn: You should not override String.prototype.' + key);\n      } else {\n        addProperty(key, function () {\n          return obj[key](this);\n        });\n      }\n    }\n  });\n\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vaS9saWIvbmF0aXZlLmpzP2Y2MDEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqKSB7XG5cbiAgdmFyIGFkZFByb3BlcnR5ID0gZnVuY3Rpb24gKG1ldGhvZCwgZnVuYykge1xuICAgIFN0cmluZy5wcm90b3R5cGUuX19kZWZpbmVHZXR0ZXJfXyhtZXRob2QsIGZ1bmMpO1xuICB9XG5cbiAgdmFyIHN0cmluZ1Byb3RvdHlwZUJsYWNrbGlzdCA9IFtcbiAgICAnX19kZWZpbmVHZXR0ZXJfXycsICdfX2RlZmluZVNldHRlcl9fJywgJ19fbG9va3VwR2V0dGVyX18nLCAnX19sb29rdXBTZXR0ZXJfXycsICdjaGFyQXQnLCAnY29uc3RydWN0b3InLFxuICAgICdoYXNPd25Qcm9wZXJ0eScsICdpc1Byb3RvdHlwZU9mJywgJ3Byb3BlcnR5SXNFbnVtZXJhYmxlJywgJ3RvTG9jYWxlU3RyaW5nJywgJ3RvU3RyaW5nJywgJ3ZhbHVlT2YnLCAnY2hhckNvZGVBdCcsXG4gICAgJ2luZGV4T2YnLCAnbGFzdEluZGV4b2YnLCAnbGVuZ3RoJywgJ2xvY2FsZUNvbXBhcmUnLCAnbWF0Y2gnLCAncmVwbGFjZScsICdzZWFyY2gnLCAnc2xpY2UnLCAnc3BsaXQnLCAnc3Vic3RyaW5nJyxcbiAgICAndG9Mb2NhbGVMb3dlckNhc2UnLCAndG9Mb2NhbGVVcHBlckNhc2UnLCAndG9Mb3dlckNhc2UnLCAndG9VcHBlckNhc2UnLCAndHJpbScsICd0cmltTGVmdCcsICd0cmltUmlnaHQnLCAnZ3N1YidcbiAgXTtcblxuICBPYmplY3Qua2V5cyhvYmopLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIGlmIChrZXkgIT0gJ2luZmxlY3QnICYmIGtleSAhPSAnaW5mbGVjdGlvbnMnKSB7XG4gICAgICBpZiAoc3RyaW5nUHJvdG90eXBlQmxhY2tsaXN0LmluZGV4T2Yoa2V5KSAhPT0gLTEpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3dhcm46IFlvdSBzaG91bGQgbm90IG92ZXJyaWRlIFN0cmluZy5wcm90b3R5cGUuJyArIGtleSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhZGRQcm9wZXJ0eShrZXksIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gb2JqW2tleV0odGhpcyk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9pL2xpYi9uYXRpdmUuanNcbi8vIG1vZHVsZSBpZCA9IDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

eval("var singularize = __webpack_require__(2)().singularize;\r\n\r\nwindow.singularize = singularize;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL2pzL3Npbmd1bGFyaXplLmpzP2M4YTAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHNpbmd1bGFyaXplID0gcmVxdWlyZSgnaScpKCkuc2luZ3VsYXJpemU7XHJcblxyXG53aW5kb3cuc2luZ3VsYXJpemUgPSBzaW5ndWxhcml6ZTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gcmVzb3VyY2VzL2Fzc2V0cy9qcy9zaW5ndWxhcml6ZS5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }
/******/ ]);